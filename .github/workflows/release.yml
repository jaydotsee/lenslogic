name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: lenslogic-linux-x64
            executable_name: lenslogic
          - os: windows-latest
            asset_name: lenslogic-windows-x64
            executable_name: lenslogic.exe
          - os: macos-latest
            asset_name: lenslogic-macos-arm64
            executable_name: lenslogic

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y exiftool

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install exiftool

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install exiftool

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller lenslogic.spec

    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd dist
        tar -czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.executable_name }}

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd dist
        7z a ${{ matrix.asset_name }}.zip ${{ matrix.executable_name }}

    - name: Calculate checksums (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd dist
        sha256sum ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.tar.gz.sha256

    - name: Calculate checksums (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd dist
        Get-FileHash ${{ matrix.asset_name }}.zip -Algorithm SHA256 | Select-Object Hash | Out-File -FilePath ${{ matrix.asset_name }}.zip.sha256

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/${{ matrix.asset_name }}.*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}